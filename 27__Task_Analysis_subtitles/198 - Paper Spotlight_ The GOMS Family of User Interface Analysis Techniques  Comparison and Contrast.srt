1
00:00:02,870 --> 00:00:06,120
 There are several varieties of GOMS models.

2
00:00:06,120 --> 00:00:09,450
 These varieties share the commonality of goals, operators, methods,

3
00:00:09,450 --> 00:00:13,695
 and selection criteria, but they differ in what additional elements they provide.

4
00:00:13,695 --> 00:00:18,825
 Bonnie John and David Kieras cover four popular variations in a paper from 1996.

5
00:00:18,825 --> 00:00:21,375
 The first is the Vanilla GOMS we've talked about so far,

6
00:00:21,375 --> 00:00:26,910
 and the other three are KLM-GOMS, CMN-GOMS and NGOMSL.

7
00:00:26,910 --> 00:00:29,220
 Let's talk about what those acronyms actually mean.

8
00:00:29,220 --> 00:00:31,530
 They start with the Keystroke-Level Model,

9
00:00:31,530 --> 00:00:33,060
 which is the simplest technique.

10
00:00:33,060 --> 00:00:37,050
 Here, the designer simply specifies the operators and execution times

11
00:00:37,050 --> 00:00:40,970
 for an action and sums them to find the complexity of an interaction.

12
00:00:40,970 --> 00:00:43,310
 This method proposed six different types of operators,

13
00:00:43,310 --> 00:00:44,585
 although for moderate interfaces,

14
00:00:44,585 --> 00:00:48,140
 we would need some new ones to cover touchscreens and other novel interfaces.

15
00:00:48,140 --> 00:00:51,175
 A second variation is CMN-GOMS.

16
00:00:51,175 --> 00:00:53,880
 CMN-GOMS is an extension of GOMS that features

17
00:00:53,880 --> 00:00:57,135
 sub-methods and conditions in a strict goal hierarchy.

18
00:00:57,135 --> 00:00:59,710
 For example, here we see a hierarchy of goals,

19
00:00:59,710 --> 00:01:03,770
 as well as the ability to choose between multiple goals in different areas.

20
00:01:03,770 --> 00:01:07,265
 Notice also the level of granularity behind these GOMS models.

21
00:01:07,265 --> 00:01:11,280
 The goals go all the way down to little goals like moving text or deleting phrases.

22
00:01:11,280 --> 00:01:13,700
 These are very, very low-level goals.

23
00:01:13,700 --> 00:01:16,310
 Notice also the way this model is being used.

24
00:01:16,310 --> 00:01:18,290
 The authors are using it to find

25
00:01:18,290 --> 00:01:21,185
 the places where there's a lot of complexity that can be cut out.

26
00:01:21,185 --> 00:01:24,829
 They do this by modelling how long each individual action takes,

27
00:01:24,829 --> 00:01:26,660
 as well as looking at the number of interactions

28
00:01:26,660 --> 00:01:29,230
 required and seeing if it can be cut down a bit.

29
00:01:29,230 --> 00:01:32,955
 A third variation is called Natural GOMS Language.

30
00:01:32,955 --> 00:01:35,600
 Natural GOMS Language or NGOMSL is

31
00:01:35,600 --> 00:01:39,760
 a natural language form of GOMS that lends itself to human interpretation.

32
00:01:39,760 --> 00:01:43,640
 In all these cases, the important point of emphasis is the way that these models allow

33
00:01:43,640 --> 00:01:47,540
 us to focus in on places where we might be asking too much of the user.

34
00:01:47,540 --> 00:01:49,490
 For example, in this model,

35
00:01:49,490 --> 00:01:53,570
 the user was being asked to carry a lot of information in working memory.

36
00:01:53,570 --> 00:01:56,990
 By making the assumptions and actions and operators this detailed,

37
00:01:56,990 --> 00:02:00,110
 this model acts as target where working memory is being overly

38
00:02:00,110 --> 00:02:00,110
 taxed in a way that we might miss when we're doing higher level designs.

