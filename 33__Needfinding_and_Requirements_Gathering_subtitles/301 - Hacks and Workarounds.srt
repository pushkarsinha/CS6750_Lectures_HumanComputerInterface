1
00:00:00,196 --> 00:00:03,088
 Let's zoom in a little bit more on what the user actually does or

2
00:00:03,088 --> 00:00:06,751
 we can do naturalistic and participant observation without having to directly

3
00:00:06,751 --> 00:00:08,189
 interact much with our users.

4
00:00:08,189 --> 00:00:11,234
 We need to get inside users heads a little more to understand what they're

5
00:00:11,234 --> 00:00:12,128
 thinking and doing.

6
00:00:12,128 --> 00:00:15,788
 If you're trying to design interfaces to make existing tasks easier,

7
00:00:15,788 --> 00:00:19,699
 one way to research that is to look at the hacks that users presently employ.

8
00:00:19,699 --> 00:00:23,119
 How do they use interfaces in non-intended ways to accomplish tasks or

9
00:00:23,119 --> 00:00:26,596
 how do they break out of the interface to accomplish a task that could have

10
00:00:26,596 --> 00:00:28,479
 been accomplished with an interface?

11
00:00:28,479 --> 00:00:31,538
 If you're designing a task meant to be performed at a desk like this,

12
00:00:31,538 --> 00:00:34,996
 looking at the person's workspace can be a great way of accomplishing this.

13
00:00:34,996 --> 00:00:37,853
 So for example, I have six monitors around.

14
00:00:37,853 --> 00:00:40,504
 And yet, you still see Post-It notes on my computer.

15
00:00:40,504 --> 00:00:43,007
 How could I possibly need more screen real estate?

16
00:00:43,007 --> 00:00:45,205
 Well, Post-It notes can't be covered up.

17
00:00:45,205 --> 00:00:47,834
 They don't take away from the existing screen real estate.

18
00:00:47,834 --> 00:00:50,518
 They're visible even when the computer is off.

19
00:00:50,518 --> 00:00:54,084
 So, this implicit notes here is the way to hack around the limitations of

20
00:00:54,084 --> 00:00:55,376
 the computer interface.

21
00:00:55,376 --> 00:00:58,039
 Now when you're looking at hacks, it's important to not just look at what

22
00:00:58,039 --> 00:01:00,430
 the user does and assume you understand why.

23
00:01:00,430 --> 00:01:03,330
 Look at their work around and ask them why they're using them.

24
00:01:03,330 --> 00:01:06,380
 Find out why they don't just use the interface that's currently in place.

25
00:01:06,380 --> 00:01:07,830
 You might find they just don't know about them,

26
00:01:07,830 --> 00:01:10,740
 which presents a different kind of design challenge.

27
00:01:10,740 --> 00:01:13,600
 Now hacks are related to another method we can use to uncover user needs as

28
00:01:13,600 --> 00:01:15,380
 well, which are called errors.

29
00:01:15,380 --> 00:01:19,130
 Whereas hacks are ways users get around the interface to accomplish their tasks,

30
00:01:19,130 --> 00:01:22,000
 errors are slips or mistakes that users frequently make

31
00:01:22,000 --> 00:01:22,000
 while performing the task within the interface.

