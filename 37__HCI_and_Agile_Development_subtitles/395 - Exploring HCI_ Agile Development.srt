1
00:00:00,000 --> 00:00:04,890
Does the area of

2
00:00:04,890 --> 00:00:09,135
HCI on which you chose to focus lend itself naturally to agile development?

3
00:00:09,135 --> 00:00:11,585
There are a lot of questions to ask in that area.

4
00:00:11,585 --> 00:00:15,885
Are you working in a high-stakes area like health care or autonomous vehicles?

5
00:00:15,885 --> 00:00:17,715
What's the cost of failure?

6
00:00:17,715 --> 00:00:20,970
If it's high, you might want to avoid agile development.

7
00:00:20,970 --> 00:00:25,740
After all, it's built in large part around learning from the real failures of real users.

8
00:00:25,740 --> 00:00:27,840
If that's a user unfairly failing to reach

9
00:00:27,840 --> 00:00:30,570
the next level of the game, that's probably fine.

10
00:00:30,570 --> 00:00:32,900
If that's a doctor entering the wrong dosage of

11
00:00:32,900 --> 00:00:36,000
a medication into a new interface, that's not fine.

12
00:00:36,000 --> 00:00:38,825
You also need to think of development costs.

13
00:00:38,825 --> 00:00:41,090
Agile development relies on being able to get a product

14
00:00:41,090 --> 00:00:43,970
up and out the door quickly and change it frequently.

15
00:00:43,970 --> 00:00:47,005
If any part of your design is reliant on the hardware,

16
00:00:47,005 --> 00:00:49,215
then agile development presents challenges.

17
00:00:49,215 --> 00:00:53,390
It might be easy to roll out a software update to improve a car screen interface,

18
00:00:53,390 --> 00:00:56,915
but you can't download a car to fix a hardware problem.

19
00:00:56,915 --> 00:00:59,960
Now, take a moment and think about whether agile development would

20
00:00:59,960 --> 00:00:59,960
be right for the area of application that you chose.

