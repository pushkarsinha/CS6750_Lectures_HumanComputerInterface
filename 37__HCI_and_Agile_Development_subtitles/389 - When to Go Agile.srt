1
00:00:00,350 --> 00:00:03,940
 So when should you consider using these more agile methodologies?

2
00:00:03,940 --> 00:00:06,598
 Lots of software development theorists have explored this space.

3
00:00:06,598 --> 00:00:09,730
 Boehm and Turner specifically suggest that agile development

4
00:00:09,730 --> 00:00:12,100
 can only be used in certain circumstances.

5
00:00:12,100 --> 00:00:15,540
 First, they say, it must be an environment with low criticality.

6
00:00:15,540 --> 00:00:16,540
 By it's nature,

7
00:00:16,540 --> 00:00:19,290
 agile development means letting the users do some of the testing.

8
00:00:19,290 --> 00:00:21,590
 So you don't want to use it in environments where bugs or

9
00:00:21,590 --> 00:00:24,740
 poor usability are going to lead to major repercussions.

10
00:00:24,740 --> 00:00:27,390
 Healthcare or financial investing wouldn't be great places for

11
00:00:27,390 --> 00:00:28,960
 agile development, generally speaking.

12
00:00:28,960 --> 00:00:31,780
 Although there have been efforts to create standards that would allow

13
00:00:31,780 --> 00:00:35,970
 the methodology to apply, without compromising security and safety.

14
00:00:35,970 --> 00:00:38,530
 But for things like smartphone games and social media apps,

15
00:00:38,530 --> 00:00:40,780
 the criticality is sufficiently low.

16
00:00:40,780 --> 00:00:44,040
 Second, it should really be a place where requirements change often.

17
00:00:44,040 --> 00:00:47,070
 One of the benefits of an agile process is they allow teams to adjust

18
00:00:47,070 --> 00:00:49,700
 quickly to changing expectations or needs.

19
00:00:49,700 --> 00:00:53,270
 A thermostat, for example, doesn't change it's requirements very often.

20
00:00:53,270 --> 00:00:54,880
 A site like Udacity though,

21
00:00:54,880 --> 00:00:58,610
 is constantly adjusting to new student interests or student needs.

22
00:00:58,610 --> 00:01:02,490
 Now these two components apply to the types of problems we're working on.

23
00:01:02,490 --> 00:01:05,250
 If we're working on an interface that would lend itself to a more agile

24
00:01:05,250 --> 00:01:10,010
 process, we also must set up the team to work well within an agile process.

25
00:01:10,010 --> 00:01:13,330
 That means small teams that are comfortable with change.

26
00:01:13,330 --> 00:01:16,530
 As opposed to large teams that thrive on order.

27
00:01:16,530 --> 00:01:19,900
 So generally, agile processes can be good in some cases

28
00:01:19,900 --> 00:01:19,900
 with the right people, but poor in many others.

