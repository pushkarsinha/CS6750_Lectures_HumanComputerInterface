1
00:00:00,240 --> 00:00:03,460
 To discuss prototyping there are a variety of different terms and

2
00:00:03,460 --> 00:00:05,760
 concepts we need to understand.

3
00:00:05,760 --> 00:00:10,100
 For the most part, these will apply to where in the prototyping timeline those

4
00:00:10,100 --> 00:00:11,990
 concepts are used.

5
00:00:11,990 --> 00:00:13,560
 In the early prototyping,

6
00:00:13,560 --> 00:00:16,640
 we're doing a very rapid revision on preliminary ideas.

7
00:00:16,640 --> 00:00:20,550
 This happens on our first few iterations through the design lifecycle.

8
00:00:20,550 --> 00:00:24,330
 In late prototyping, we're putting the finishing touches on the final design,

9
00:00:24,330 --> 00:00:26,730
 or revising a design that's already live.

10
00:00:26,730 --> 00:00:29,360
 This happens when we've already been through several iterations

11
00:00:29,360 --> 00:00:30,790
 of our design lifecycle.

12
00:00:30,790 --> 00:00:31,800
 At the various phases,

13
00:00:31,800 --> 00:00:35,080
 we'll generally use different types of prototypes in evaluations.

14
00:00:35,080 --> 00:00:37,460
 Now, note that everything I'm about to say is pretty general,

15
00:00:37,460 --> 00:00:40,990
 there will be lots of exceptions.

16
00:00:40,990 --> 00:00:45,420
 The first concept is representation, what is the prototype?

17
00:00:45,420 --> 00:00:48,610
 Early on, we might be fine with just some textural descriptions or

18
00:00:48,610 --> 00:00:51,430
 some simple visuals that we've written up on a piece of paper.

19
00:00:51,430 --> 00:00:53,920
 Later on though, we'll want to make things more visual and

20
00:00:53,920 --> 00:00:55,470
 maybe even more interactive.

21
00:00:55,470 --> 00:00:58,380
 We only want to put the work into developing the more complex type of

22
00:00:58,380 --> 00:01:02,890
 prototypes once we vetted the ideas with prototypes that are easier to build.

23
00:01:02,890 --> 00:01:03,940
 So in a lot of ways,

24
00:01:03,940 --> 00:01:06,760
 this is a spectrum of how easy prototypes are to build over time.

25
00:01:06,760 --> 00:01:10,850
 A verbal prototype is literally just a description, and

26
00:01:10,850 --> 00:01:12,850
 I can change my description on the fly.

27
00:01:12,850 --> 00:01:16,348
 A paper prototype is drawn on paper, and similarly, I could ball up the paper,

28
00:01:16,348 --> 00:01:18,767
 throw it away, and draw a new version pretty quickly.

29
00:01:18,767 --> 00:01:21,940
 But things like actual functional prototypes that really work,

30
00:01:21,940 --> 00:01:23,387
 those take a good bit of time.

31
00:01:23,387 --> 00:01:26,773
 And so we only want to do those once we've already vetted that the ideas that

32
00:01:26,773 --> 00:01:28,996
 we're going to build actually have some value.

33
00:01:28,996 --> 00:01:30,402
 You don't want to sink lots of months and

34
00:01:30,402 --> 00:01:33,225
 lots of engineering resources into building something that actually works.

35
00:01:33,225 --> 00:01:36,165
 Only to find out there's some feedback you could have gotten just based

36
00:01:36,165 --> 00:01:38,762
 on a drawing on a piece of paper that would have told you that your

37
00:01:38,762 --> 00:01:40,490
 idea wasn't a very good one.

38
00:01:40,490 --> 00:01:44,350
 This brings us to our second concept, which is fidelity.

39
00:01:44,350 --> 00:01:48,150
 Fidelity refers to the completeness or the maturity of the prototype.

40
00:01:48,150 --> 00:01:51,820
 A low-fidelity prototype would be something like paper or simple drawings,

41
00:01:51,820 --> 00:01:54,100
 very easy to change.

42
00:01:54,100 --> 00:01:57,360
 A high-fidelity prototype would be something like a wireframe or an actual

43
00:01:57,360 --> 00:02:00,732
 functional working interface, something that was harder to put together.

44
00:02:00,732 --> 00:02:04,280
 We want to move from easily changeable low-fidelity prototypes to explore our

45
00:02:04,280 --> 00:02:08,380
 ideas, to higher-fidelity prototypes to really test them out.

46
00:02:08,380 --> 00:02:11,339
 Note that fidelity and representation are pretty closely related,

47
00:02:11,339 --> 00:02:14,974
 low-fidelity is really about a prototype that's pretty far from being complete.

48
00:02:14,974 --> 00:02:18,089
 And the same thing is true for some of our early methods of prototyping.

49
00:02:18,089 --> 00:02:21,484
 They describe different ideas, but they very heavily correlate what kinds

50
00:02:21,484 --> 00:02:25,470
 of representations you're going to use for different levels of fidelity.

51
00:02:25,470 --> 00:02:28,994
 Now these different kinds of prototypes also lend themselves to different kinds

52
00:02:28,994 --> 00:02:31,040
 of evaluation structures.

53
00:02:31,040 --> 00:02:33,830
 Low fidelity prototypes can fine for evaluating the relative

54
00:02:33,830 --> 00:02:37,240
 function of an interface, whether or not it can do what's it's designed to do.

55
00:02:37,240 --> 00:02:39,940
 If a user looks at the interface can they figure out what they're

56
00:02:39,940 --> 00:02:40,510
 supposed to press?

57
00:02:40,510 --> 00:02:43,110
 You can prototype that was just a drawing on a piece of paper,

58
00:02:43,110 --> 00:02:45,278
 as opposed to a real functional prototype.

59
00:02:45,278 --> 00:02:48,100
 Things like wireframes can be useful in evaluating the relative

60
00:02:48,100 --> 00:02:50,430
 readability of the interface as well.

61
00:02:50,430 --> 00:02:54,430
 However, to evaluate actual performance, like how long certain tasks take, or

62
00:02:54,430 --> 00:02:56,290
 what design leads to more purchases.

63
00:02:56,290 --> 00:02:58,790
 We generally need a higher fidelity prototype,

64
00:02:58,790 --> 00:03:02,090
 through more iterations of the design lifecycle.

65
00:03:02,090 --> 00:03:04,230
 So early on, we're really just evaluating whether or

66
00:03:04,230 --> 00:03:08,080
 not our prototype even has the potential to do what we want it to do.

67
00:03:08,080 --> 00:03:09,460
 Can a user physically use it?

68
00:03:09,460 --> 00:03:12,070
 Can they identify what button to press and when?

69
00:03:12,070 --> 00:03:15,440
 For that we need additional detail like font size and real screen layout.

70
00:03:15,440 --> 00:03:18,490
 We need a real prototype that looks the way the final interface will look,

71
00:03:18,490 --> 00:03:20,410
 even if it doesn't work quite yet.

72
00:03:20,410 --> 00:03:24,765
 And then, to evaluate performance we really need a prototype that's working,

73
00:03:24,765 --> 00:03:27,464
 or close to working, to evaluate certain tasks.

74
00:03:27,464 --> 00:03:30,069
 And then the final concept we need to understand,

75
00:03:30,069 --> 00:03:31,689
 is the scope of the interface.

76
00:03:31,689 --> 00:03:35,080
 Is it a horizontal prototype or a vertical prototype?

77
00:03:35,080 --> 00:03:40,210
 Horizontal prototypes cover the design as a whole, but in a more shallow way.

78
00:03:40,210 --> 00:03:43,390
 Vertical prototypes take a small portion of the interaction and

79
00:03:43,390 --> 00:03:45,990
 prototype it in great detail.

80
00:03:45,990 --> 00:03:49,060
 So for example, if we were designing Facebook, we might have a vertical

81
00:03:49,060 --> 00:03:52,350
 prototype specifically for the status-posting screen and

82
00:03:52,350 --> 00:03:55,610
 a horizontal prototype for the site in general.

83
00:03:55,610 --> 00:03:59,110
 Now, in my experience, we usually start with horizontal prototypes earlier on,

84
00:03:59,110 --> 00:04:01,670
 and move toward the deeper vertical prototype later.

85
00:04:01,670 --> 00:04:05,000
 But in reality, you'll likely move back and forth among these more

86
00:04:05,000 --> 00:04:08,520
 frequently throughout you iterations through the design lifecycle.

87
00:04:08,520 --> 00:04:12,121
 So, these are four the main concepts behind prototyping.

88
00:04:12,121 --> 00:04:14,320
 There are other questions we might ask ourselves as well.

89
00:04:14,320 --> 00:04:17,730
 Like whether we're prototyping iterative or revolutionary changes, and

90
00:04:17,730 --> 00:04:20,850
 the extent to which the prototype needs to be executable.

91
00:04:20,850 --> 00:04:20,850
 But in many ways, those fall under these previous concepts.

