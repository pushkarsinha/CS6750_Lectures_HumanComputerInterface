1
00:00:00,320 --> 00:00:02,950
 Our first principle is discoverability.

2
00:00:02,950 --> 00:00:06,910
 Don Norman describes it by asking, is it possible to even figure out what actions

3
00:00:06,910 --> 00:00:09,920
 are possible and where and how to perform them?

4
00:00:09,920 --> 00:00:11,770
 Nielsen has a similar principle.

5
00:00:11,770 --> 00:00:15,500
 He advises us to minimize the user's memory load by making objects, actions,

6
00:00:15,500 --> 00:00:17,210
 and options visible.

7
00:00:17,210 --> 00:00:17,870
 Instructions for

8
00:00:17,870 --> 00:00:22,170
 use of the system should be visible or easily retrievable whenever appropriate.

9
00:00:22,170 --> 00:00:24,235
 In other words, when the user doesn't know what to do,

10
00:00:24,235 --> 00:00:26,593
 they should be able to easily figure out what to do.

11
00:00:26,593 --> 00:00:27,960
 Constantine and

12
00:00:27,960 --> 00:00:31,030
 Lockwood have a similar principle called the visibility principle.

13
00:00:31,030 --> 00:00:33,537
 The design should make all needed options and materials for

14
00:00:33,537 --> 00:00:37,350
 a given task visible without distracting the user with extraneous or

15
00:00:37,350 --> 00:00:39,380
 redundant information.

16
00:00:39,380 --> 00:00:42,930
 The idea behind all three of these principles is that relevant function

17
00:00:42,930 --> 00:00:46,280
 should be made visible, so the user can discover them as opposed to having

18
00:00:46,280 --> 00:00:50,080
 to read about them in some documentation or learn them through some tutorial.

19
00:00:50,080 --> 00:00:52,340
 Let's take an example of this real quick.

20
00:00:52,340 --> 00:00:55,660
 Here in PowerPoint, there are a number of different menus available at the top,

21
00:00:55,660 --> 00:00:57,580
 as well as some toolbars.

22
00:00:57,580 --> 00:01:01,230
 The effect here is that I can browse the different functions available to me.

23
00:01:01,230 --> 00:01:03,080
 I can discover what's there.

24
00:01:03,080 --> 00:01:05,930
 For Nielsen, this means that I don't have to remember all of these.

25
00:01:05,930 --> 00:01:09,040
 I just have to recognize them when I see them in the tool bars.

26
00:01:09,040 --> 00:01:11,990
 For example, I don't have to remember Arrange as some keyboard I have

27
00:01:11,990 --> 00:01:16,170
 to type in manually to bring up some ideas about how I might arrange things.

28
00:01:16,170 --> 00:01:20,250
 All I have to do is recognize Arrange as the right button when I see it.

29
00:01:20,250 --> 00:01:23,340
 Now while this might be true at the application level, it's not often true

30
00:01:23,340 --> 00:01:26,900
 at the operating system level, because the operating system doesn't command so

31
00:01:26,900 --> 00:01:30,900
 much screen real estate all the time and probably for good reason.

32
00:01:30,900 --> 00:01:34,300
 So for example, on a Mac, I can use Command Shift 4 to

33
00:01:34,300 --> 00:01:38,000
 take a screen shot only of a certain area of my screen.

34
00:01:38,000 --> 00:01:41,102
 However, the only way I know of to find that is to Google it or

35
00:01:41,102 --> 00:01:42,760
 read it in a manual.

36
00:01:42,760 --> 00:01:44,580
 It isn't discoverable or visible on it's own.

37
00:01:44,580 --> 00:01:47,960
 And you might never even realize it's possible.

38
00:01:47,960 --> 00:01:51,160
 So the principle of discoverability advocates that functions be visible to

39
00:01:51,160 --> 00:01:52,050
 the user, so

40
00:01:52,050 --> 00:01:56,310
 that they can discover them, rather then relying on them learning them elsewhere.

41
00:01:56,310 --> 00:01:57,780
 I actually use a PC more than a Mac.

42
00:01:57,780 --> 00:02:01,160
 And whenever I come back to my Mac after not using it for awhile,

43
00:02:01,160 --> 00:02:02,330
 I have to Google that again.

44
00:02:02,330 --> 00:02:03,480
 I know it's possible, but

45
00:02:03,480 --> 00:02:06,310
 I never remember the command that actually makes it happen.

46
00:02:06,310 --> 00:02:09,560
 Constantine and Lockwood's principle of visibility would add on to this that

47
00:02:09,560 --> 00:02:11,760
 we shouldn't get too crazy.

48
00:02:11,760 --> 00:02:13,830
 We want to make functions discoverable, but

49
00:02:13,830 --> 00:02:16,840
 that doesn't mean just throwing everything on the screen.

50
00:02:16,840 --> 00:02:16,840
 We want to walk a line between discoverability, and simplicity

