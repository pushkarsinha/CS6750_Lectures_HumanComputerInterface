1
00:00:00,000 --> 00:00:02,970
 One of my favorite examples of how consistency matters

2
00:00:02,970 --> 00:00:05,910
 comes from Microsoft's Visual Studio development environment.

3
00:00:05,910 --> 00:00:07,965
 To be clear, I adore Visual Studio,

4
00:00:07,965 --> 00:00:09,930
 so I'm not just piling onto it.

5
00:00:09,930 --> 00:00:13,080
 As you can see here, in most interfaces,

6
00:00:13,080 --> 00:00:15,090
 Ctrl+Y is the redo hotkey.

7
00:00:15,090 --> 00:00:17,309
 If you hit undo one too many times,

8
00:00:17,309 --> 00:00:20,595
 you can press Ctrl+Y to redo the last undone action.

9
00:00:20,595 --> 00:00:21,990
 But in Visual Studio,

10
00:00:21,990 --> 00:00:25,335
 by default it's Shift+ Alt + Backspace.

11
00:00:25,335 --> 00:00:31,020
 What? And what's worse than this is that Ctrl+Y is the delete line function,

12
00:00:31,020 --> 00:00:34,155
 which is a function I never even heard of before Visual Studio.

13
00:00:34,155 --> 00:00:36,590
 So, if you're pressing Ctrl+Z a bunch of times to

14
00:00:36,590 --> 00:00:39,080
 maybe rewind the changes you've made lately,

15
00:00:39,080 --> 00:00:41,330
 and then you press Ctrl+Y out of habit because

16
00:00:41,330 --> 00:00:43,625
 it's what every other interface uses for redo,

17
00:00:43,625 --> 00:00:47,630
 the effect is that you delete the current line instead of redoing anything,

18
00:00:47,630 --> 00:00:50,390
 and that actually makes a new change which means

19
00:00:50,390 --> 00:00:53,585
 you lose that entire tree of redoable actions.

20
00:00:53,585 --> 00:00:56,480
 Anything you've undone can now not be recovered.

21
00:00:56,480 --> 00:01:03,455
 It's infuriating and yet it isn't without its reasons and the reason is consistency.

22
00:01:03,455 --> 00:01:07,450
 Ctrl+Y was the hotkey for the delete line function in WordStar,

23
00:01:07,450 --> 00:01:09,754
 one of the very first word processors.

24
00:01:09,754 --> 00:01:12,900
 Before Ctrl+Y was the hotkey for the more general redo function,

25
00:01:12,900 --> 00:01:14,810
 there wasn't even a redo function back then.

26
00:01:14,810 --> 00:01:18,935
 I've heard that Y in this context stood for yank but I don't know how true that is.

27
00:01:18,935 --> 00:01:21,620
 But Ctrl+Y had been used to delete a line from

28
00:01:21,620 --> 00:01:24,305
 WordStar all the way through Visual Basic Six,

29
00:01:24,305 --> 00:01:26,455
 which was the predecessor to Visual Studio.

30
00:01:26,455 --> 00:01:28,410
 So, in designing Visual Studio,

31
00:01:28,410 --> 00:01:29,925
 Microsoft had a choice,

32
00:01:29,925 --> 00:01:31,880
 be consistent with the convention from

33
00:01:31,880 --> 00:01:34,370
 Word Star and Visual Basic Six or be

34
00:01:34,370 --> 00:01:37,174
 consistent with the convention that we're using in their other interfaces.

35
00:01:37,174 --> 00:01:40,585
 They chose to be consistent with the predecessors to Visual Studio,

36
00:01:40,585 --> 00:01:43,155
 and they've stayed consistent with that ever since.

37
00:01:43,155 --> 00:01:46,820
 So, in trying to maintain the consistency principle in one way,

38
00:01:46,820 --> 00:01:48,925
 they actually violated it in another way.

39
00:01:48,925 --> 00:01:51,380
 So, if you try to leverage the consistency principle,

40
00:01:51,380 --> 00:01:53,180
 you're going to encounter some challenges.

41
00:01:53,180 --> 00:01:56,690
 There may be multiple conflicting things with which you want to be consistent,

42
00:01:56,690 --> 00:02:00,770
 there may be questions about whether a certain change is worth the dropping consistency.

43
00:02:00,770 --> 00:02:02,780
 These are things to test with users which we

44
00:02:02,780 --> 00:02:02,780
 talked about in the other unit of this course.

