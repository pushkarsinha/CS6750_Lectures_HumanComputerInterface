1
00:00:02,780 --> 00:00:07,725
 Here are five quick tips for reducing cognitive load in your interfaces.

2
00:00:07,725 --> 00:00:10,830
 Number one: Use multiple modalities.

3
00:00:10,830 --> 00:00:13,230
 Most often, that's going to be both visual and verbal,

4
00:00:13,230 --> 00:00:15,210
 but when only one system is engaged,

5
00:00:15,210 --> 00:00:18,180
 it's natural for it to become overloaded while the other one becomes

6
00:00:18,180 --> 00:00:22,230
 board so describe things verbally and also present them visually.

7
00:00:22,230 --> 00:00:25,980
 Number two: Let the modalities complement each other.

8
00:00:25,980 --> 00:00:28,080
 Some people will take that first step and use it as

9
00:00:28,080 --> 00:00:31,155
 justification to present different content in the two modalities.

10
00:00:31,155 --> 00:00:33,090
 That actually increases cognitive load because

11
00:00:33,090 --> 00:00:35,475
 the user has to try two process two things at once.

12
00:00:35,475 --> 00:00:38,995
 As you just noticed, when Amanda put something irrelevant up while I said that.

13
00:00:38,995 --> 00:00:42,225
 Instead, focus on letting each modality support,

14
00:00:42,225 --> 00:00:45,545
 Illustrate, or explain the other instead of competing with the other.

15
00:00:45,545 --> 00:00:49,250
 Number three: Give the user control of the pace.

16
00:00:49,250 --> 00:00:53,030
 That's more pertinent in educational applications of cognitive load, but oftentimes,

17
00:00:53,030 --> 00:00:55,160
 interfaces have built-in timers on things

18
00:00:55,160 --> 00:00:57,680
 like menus disappearing or selections needing to

19
00:00:57,680 --> 00:01:02,700
 be made that dictates the pace induce a stress and raises cognitive load.

20
00:01:02,700 --> 00:01:05,750
 Instead, let the user control the pace.

21
00:01:05,750 --> 00:01:10,135
 Number four: Emphasize essential content and minimize clutter.

22
00:01:10,135 --> 00:01:12,530
 The principle of discoverability says we want the user

23
00:01:12,530 --> 00:01:14,590
 to be able to find the functions available to them.

24
00:01:14,590 --> 00:01:16,580
 But that could also raise cognitive load if we

25
00:01:16,580 --> 00:01:19,115
 just give users a list of 500 different options.

26
00:01:19,115 --> 00:01:23,060
 To alleviate that we can design our interfaces in a way that emphasizes

27
00:01:23,060 --> 00:01:27,935
 the most common actions while still giving access to the full range of possible options.

28
00:01:27,935 --> 00:01:30,920
 Number five: Offload tasks.

29
00:01:30,920 --> 00:01:34,430
 Look closely at what the user has to do or remember at every stage of

30
00:01:34,430 --> 00:01:38,825
 the interfaces operation and ask if you can offload part of that task onto the interface.

31
00:01:38,825 --> 00:01:40,550
 For example, if a user needs to remember

32
00:01:40,550 --> 00:01:42,380
 something that they entered on a previous screen,

33
00:01:42,380 --> 00:01:43,655
 show them what they entered.

34
00:01:43,655 --> 00:01:45,590
 If there's a task that need to do manually,

35
00:01:45,590 --> 00:01:45,590
 see if you can trigger it automatically.

