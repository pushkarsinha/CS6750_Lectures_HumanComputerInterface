1
00:00:03,140 --> 00:00:08,040
 The seminal paper on direct manipulation interfaces came out in 1985,

2
00:00:08,040 --> 00:00:09,720
 co-authored by Edwin Hutchins,

3
00:00:09,720 --> 00:00:11,820
 James Hollan, and Don Norman.

4
00:00:11,820 --> 00:00:15,510
 We'll talk a lot more about Hutchins and Norman later in our conversations.

5
00:00:15,510 --> 00:00:19,755
 Hutchins coauthored the foundational paper on Distributed Cognition,

6
00:00:19,755 --> 00:00:22,370
 and Norman created one of the most accepted set of

7
00:00:22,370 --> 00:00:26,000
 design principles in his seminal book Design of Everyday Things.

8
00:00:26,000 --> 00:00:31,685
 But in 1985, direct manipulation was starting to become a more common design strategy.

9
00:00:31,685 --> 00:00:36,290
 Hutchins, Hollan, and Norman identified two aspects of directness.

10
00:00:36,290 --> 00:00:38,890
 The first was distance.

11
00:00:38,890 --> 00:00:43,625
 Distance is the distance between the users goals and the system itself.

12
00:00:43,625 --> 00:00:46,280
 This is the idea of goals of execution and

13
00:00:46,280 --> 00:00:49,480
 evaluation that we talk about in the context of feedback cycles.

14
00:00:49,480 --> 00:00:53,390
 They write that, "The feeling of directness is inversely proportional to

15
00:00:53,390 --> 00:00:57,530
 the amount of cognitive effort it takes to manipulate and evaluate the system."

16
00:00:57,530 --> 00:01:01,900
 In other words, the greater the cognitive load required to use the system,

17
00:01:01,900 --> 00:01:05,675
 the less direct to the interaction with the system actually feels.

18
00:01:05,675 --> 00:01:08,315
 The authors break distance in the two components.

19
00:01:08,315 --> 00:01:11,290
 Semantic distance and articulatory distance.

20
00:01:11,290 --> 00:01:14,030
 Semantic distance refers to the difference between

21
00:01:14,030 --> 00:01:17,015
 the users goals and their expression in the system.

22
00:01:17,015 --> 00:01:20,305
 In other words, it's how hard it is to know what to do.

23
00:01:20,305 --> 00:01:24,965
 Articulatory distance is the distance between that expression and its execution.

24
00:01:24,965 --> 00:01:29,425
 In other words, it's how hard it is to actually do what you know to do.

25
00:01:29,425 --> 00:01:32,270
 You might notice that semantic distance encompasses

26
00:01:32,270 --> 00:01:36,695
 our identify intentions and identify actions parts of our gulf of execution,

27
00:01:36,695 --> 00:01:41,020
 and articulatory distance comprises that execute actions phase.

28
00:01:41,020 --> 00:01:50,265
 This is brought together here in figure six from this paper. Yeah, there we go.

29
00:01:50,265 --> 00:01:52,005
 The user starts with some goals,

30
00:01:52,005 --> 00:01:56,530
 and translates those goals into the intentions in the context of the interface.

31
00:01:56,530 --> 00:01:59,935
 They then translate those intentions into the form of the input,

32
00:01:59,935 --> 00:02:02,990
 the actions, and execute those actions.

33
00:02:02,990 --> 00:02:05,205
 The system then does something,

34
00:02:05,205 --> 00:02:07,800
 and gives back some form of output.

35
00:02:07,800 --> 00:02:13,000
 The user then interprets the form of that output to discern the meaning of that output,

36
00:02:13,000 --> 00:02:16,755
 and then evaluates whether or not that meaning matches their goals.

37
00:02:16,755 --> 00:02:18,485
 So to take an example,

38
00:02:18,485 --> 00:02:20,145
 when I brought up this figure,

39
00:02:20,145 --> 00:02:24,385
 I needed to rotate the paper to display it correctly, that was my goal.

40
00:02:24,385 --> 00:02:27,984
 I translated that goal into the context of the application,

41
00:02:27,984 --> 00:02:30,895
 a rotate option that was probably hidden somewhere.

42
00:02:30,895 --> 00:02:32,475
 I then identified the action,

43
00:02:32,475 --> 00:02:34,005
 which was pressing the rotate button,

44
00:02:34,005 --> 00:02:35,895
 and I executed that action.

45
00:02:35,895 --> 00:02:39,335
 The system then did something and returned the output to me.

46
00:02:39,335 --> 00:02:41,645
 The output specifically was the paper turned

47
00:02:41,645 --> 00:02:44,060
 upside down instead of turning the way I wanted it.

48
00:02:44,060 --> 00:02:46,115
 That was the form of the output.

49
00:02:46,115 --> 00:02:51,320
 I then interpreted that form to discern the meaning that it had rotated at the wrong way.

50
00:02:51,320 --> 00:02:54,064
 I evaluated that my goals weren't accomplished,

51
00:02:54,064 --> 00:02:55,940
 and now I knew what to do next.

52
00:02:55,940 --> 00:02:59,420
 I then pressed the button two more times to rotate it twice again,

53
00:02:59,420 --> 00:03:02,285
 and the system then return that output to me.

54
00:03:02,285 --> 00:03:06,670
 I interpreted the form of that output to mean that the figure was now right-side up,

55
00:03:06,670 --> 00:03:10,635
 and I evaluated that that matched my initial goals.

56
00:03:10,635 --> 00:03:13,210
 You might be able to see that this cycle is happening

57
00:03:13,210 --> 00:03:16,660
 constantly whenever you're interacting with the computational interface.

58
00:03:16,660 --> 00:03:20,905
 You could think of it in terms of broad tasks like searching a document for some keyword,

59
00:03:20,905 --> 00:03:23,740
 or you could think of it in terms of each individual little tasks

60
00:03:23,740 --> 00:03:26,635
 like interacting with the menus and pulling up the right prompts.

61
00:03:26,635 --> 00:03:30,175
 But distance is only one component of direct manipulation.

62
00:03:30,175 --> 00:03:33,550
 It's possible to have interfaces with very little distance that

63
00:03:33,550 --> 00:03:37,059
 nonetheless are not examples of this kind of direct interaction.

64
00:03:37,059 --> 00:03:41,125
 Everything we've talked about so far is true of feedback cycles in general,

65
00:03:41,125 --> 00:03:43,165
 not just of direct manipulation.

66
00:03:43,165 --> 00:03:46,930
 That's why the second component of this is direct engagement.

67
00:03:46,930 --> 00:03:50,720
 What sets direct manipulation apart is the second component.

68
00:03:50,720 --> 00:03:52,440
 The authors of the paper write that,

69
00:03:52,440 --> 00:03:55,485
 "The systems that best exemplify direct manipulation,

70
00:03:55,485 --> 00:03:58,460
 all give the qualitative feeling that one is directly

71
00:03:58,460 --> 00:04:01,520
 engaged with control of the objects not with the programs,

72
00:04:01,520 --> 00:04:06,355
 not with the computer, but with the semantic objects of our goals and intentions."

73
00:04:06,355 --> 00:04:10,415
 If we're moving files, we should be physically moving the representation of the files.

74
00:04:10,415 --> 00:04:13,700
 If we're playing a game we should be directly controlling our characters.

75
00:04:13,700 --> 00:04:15,140
 If we're navigating channels,

76
00:04:15,140 --> 00:04:18,790
 we should be specifically selecting clear representations of the channels that we want.

77
00:04:18,790 --> 00:04:21,590
 And that's what takes a general good feedback cycle,

78
00:04:21,590 --> 00:04:24,040
 and makes it an instance of direct manipulation.

79
00:04:24,040 --> 00:04:25,970
 We can shorten the gulf of execution and

80
00:04:25,970 --> 00:04:28,965
 evaluation in a number of ways without direct manipulation,

81
00:04:28,965 --> 00:04:28,965
 but direct manipulation is a powerful method for shortening that distance.

